(function(){"use strict";class d{static BLACK="black";static BLUE="blue";static RED="red"}class C{static d(t,e){console.log(`[DEBUG]/${t}: ${e}`)}static i(t,e){console.log(`[INFO]/${t}: ${e}`)}static w(t,e){console.log(`[WARNING]/${t}: ${e}`)}static e(t,e){console.log(`[ERROR]/${t}: ${e}`)}}class s{static#t="init";static#s="start";static#e="draw";static#i="drawCommand";static#a="complete";value;constructor(t){this.value=t}static INIT=new s(this.#t);static START=new s(this.#s);static DRAW=new s(this.#e);static DRAW_COMMAND=new s(this.#i);static COMPLETE=new s(this.#a)}class E{kind;color;startX;startY;endX;endY;constructor(t,e,i,a,c,n){this.kind=t,this.color=e,this.startX=i,this.startY=a,this.endX=c,this.endY=n}}class r{static#t="line";value;constructor(t){this.value=t}static LINE=new r(this.#t)}class o{#t="vertical";#s="horizontal";static#e="vertical";static#i="horizontal";#a="ns-resize";#c="ew-resize";value;constructor(t){this.value=t}static VERTICAL=new o(this.#e);static HORIZONTAL=new o(this.#i);toggle(){this.value=this.isVertical()?this.#s:this.#t}toCursorDirection(){return this.isVertical()?this.#a:this.#c}isVertical(){return this.value===this.#t}isHorizontal(){return this.value===this.#s}}const A="TopLeftLineWorker";self.onmessage=l=>{const{type:t,direction:e,startX:i,startY:a,endX:c,endY:n}=l.data,I=new o(e.value);if(t.value===s.DRAW.value){let h=a,R=i;const u=()=>{I.isVertical()?h>=n?(postMessage({type:s.DRAW_COMMAND,drawCommand:new E(r.LINE,d.RED,i,a,c,h)}),h--,requestAnimationFrame(u)):(C.d(A,"Completed"),postMessage({type:s.COMPLETE,startX:i,startY:a,endX:c,endY:n})):R>=c?(postMessage({type:s.DRAW_COMMAND,drawCommand:new E(r.LINE,d.RED,i,a,R,n)}),R--,requestAnimationFrame(u)):(C.d(A,"Completed"),postMessage({type:s.COMPLETE,startX:i,startY:a,endX:c,endY:n}))};requestAnimationFrame(u)}}})();
